{"version":3,"sources":["components/Form.js","components/Buttons.js","components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setTitle","useState","inputData","setInputData","message","setMessage","className","onSubmit","e","preventDefault","length","type","value","onChange","target","Buttons","resultsTable","setPageNum","count","setCount","slice","map","elem","onClick","Results","data","totalResultsButtons","totalResults","resultsButtonsTable","i","push","Response","Search","item","src","Poster","alt","Title","Year","imdbID","App","setData","title","pageNum","useEffect","fetch","then","response","json","catch","error","console","log","fetchData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAEe,SAASA,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAAY,EACPC,mBAAS,IADF,mBAClCC,EADkC,KACvBC,EADuB,OAEXF,mBAAS,IAFE,mBAElCG,EAFkC,KAEzBC,EAFyB,KAiBzC,OACE,sBAAKC,UAAU,WAAf,UACE,uBAAMC,SAfV,SAAoBC,GAClBA,EAAEC,iBACEP,EAAUQ,OAAS,EACrBL,EACE,uEAGFL,EAASE,GACTC,EAAa,IACbE,EAAW,MAMX,UACE,kCACE,6CACA,uBACEM,KAAK,OACLC,MAAOV,EACPW,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBX,EAAaW,EAAOF,aAGlD,wBAAQD,KAAK,SAAb,uBAEF,4BAAIP,OC9BK,SAASW,EAAT,GAAgD,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAAc,EAClChB,mBAAS,GADyB,mBACrDiB,EADqD,KAC9CC,EAD8C,KAG5D,OACE,qBAAKb,UAAU,cAAf,SAC2B,IAAxBU,EAAaN,QACZM,EAAaI,MAAMF,EAAOA,EAAQ,IAAIG,KAAI,SAACC,GAAD,OACxC,wBAEEV,MAAOU,EAAO,EACdC,QAAS,YAAiB,IAAdT,EAAa,EAAbA,OACVG,EAAWH,EAAOF,OAClBO,EAASG,EAAO,IALpB,SAQGA,EAAO,GAPHA,QCPF,SAASE,EAAT,GAIb,IAJqD,IAArBC,EAAoB,EAApBA,KAAMR,EAAc,EAAdA,WAClCS,EAAsBD,EAAKE,aAAe,GACxCC,EAAsB,GAEnBC,EAAI,EAAGA,EAAIH,EAAqBG,IACvCD,EAAoBE,KAAKD,GAG3B,OACE,mCACGJ,EACmB,SAAlBA,EAAKM,SACH,gCACE,kCACE,gCACE,+BACE,wCACA,uCACA,2CAGJ,gCACGN,EAAKO,OAAOX,KAAI,SAACY,GAAD,OACf,+BACE,6BACE,qBAAKC,IAAKD,EAAKE,OAAQC,IAAI,aAE7B,6BAAKH,EAAKI,QACV,6BAAKJ,EAAKK,SALHL,EAAKM,gBAUpB,cAACxB,EAAD,CACEC,aAAcY,EACdX,WAAYA,OAIhB,gDAGF,KCdOuB,MA3Bf,WAAgB,IAAD,EACWvC,mBAAS,IADpB,mBACNwB,EADM,KACAgB,EADA,OAEaxC,mBAAS,IAFtB,mBAENyC,EAFM,KAEC1C,EAFD,OAGiBC,mBAAS,GAH1B,mBAGN0C,EAHM,KAGG1B,EAHH,KAmBb,OAPA2B,qBACE,WACEF,GATJ,SAAmBA,GACjBG,MAAM,8CAAD,OAA+CH,EAA/C,iBAA6DC,IAC/DG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUP,EAAQO,MACvBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAKrBG,CAAUX,KAErB,CAACA,EAAOC,IAIR,sBAAKrC,UAAU,MAAf,UACE,cAACP,EAAD,CAAMC,SAAUA,IAChB,cAACwB,EAAD,CAASC,KAAMA,EAAMR,WAAYA,QCdxBqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3f051ff2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Form({ setTitle }) {\n  const [inputData, setInputData] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  function submitForm(e) {\n    e.preventDefault();\n    if (inputData.length < 3) {\n      setMessage(\n        \"Searched title is too short, it must be at least 3 characters long\"\n      );\n    } else {\n      setTitle(inputData);\n      setInputData(\"\");\n      setMessage(\"\");\n    }\n  }\n\n  return (\n    <div className=\"form-box\">\n      <form onSubmit={submitForm}>\n        <label>\n          <p>Search title</p>\n          <input\n            type=\"text\"\n            value={inputData}\n            onChange={({ target }) => setInputData(target.value)}\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      <p>{message}</p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Buttons({ resultsTable, setPageNum }) {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div className=\"buttons-box\">\n      {resultsTable.length !== 0 &&\n        resultsTable.slice(count, count + 10).map((elem) => (\n          <button\n            key={elem}\n            value={elem + 1}\n            onClick={({ target }) => {\n              setPageNum(target.value);\n              setCount(elem - 1);\n            }}\n          >\n            {elem + 1}\n          </button>\n        ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Buttons from \"./Buttons\";\n\nexport default function Results({ data, setPageNum }) {\n  let totalResultsButtons = data.totalResults / 10;\n  const resultsButtonsTable = [];\n\n  for (let i = 0; i < totalResultsButtons; i++) {\n    resultsButtonsTable.push(i);\n  }\n\n  return (\n    <>\n      {data ? (\n        data.Response === \"True\" ? (\n          <div>\n            <table>\n              <thead>\n                <tr>\n                  <th>Poster</th>\n                  <th>Title</th>\n                  <th>Year</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.Search.map((item) => (\n                  <tr key={item.imdbID}>\n                    <td>\n                      <img src={item.Poster} alt=\"poster\" />\n                    </td>\n                    <td>{item.Title}</td>\n                    <td>{item.Year}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <Buttons\n              resultsTable={resultsButtonsTable}\n              setPageNum={setPageNum}\n            />\n          </div>\n        ) : (\n          <p>No movies found</p>\n        )\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport Form from \"./components/Form\";\nimport Results from \"./components/Results\";\nfunction App() {\n  const [data, setData] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [pageNum, setPageNum] = useState(1);\n\n  function fetchData(title) {\n    fetch(`https://www.omdbapi.com/?apikey=ade9d7c0&s=${title}&page=${pageNum}`)\n      .then((response) => response.json())\n      .then((json) => setData(json))\n      .catch((error) => console.log(error));\n  }\n\n  useEffect(\n    function () {\n      title && fetchData(title);\n    },\n    [title, pageNum]\n  );\n\n  return (\n    <div className=\"App\">\n      <Form setTitle={setTitle} />\n      <Results data={data} setPageNum={setPageNum} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"reset-css\";\n\nimport \"./scss/main.scss\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}